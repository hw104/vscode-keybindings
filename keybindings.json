[
    {
        "key": "enter",
        "command": "-renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "enter",
        "command": "explorer.openAndPassFocus",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f8",
        "command": "-editor.action.marker.nextInFiles",
        "when": "editorFocus"
    },
    {
        "key": "pagedown",
        "command": "-cursorPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "space",
        "command": "-filesExplorer.openFilePreserveFocus",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.navigateBack"
    },
    {
        "key": "ctrl+,",
        "command": "editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+;",
        "command": "editor.action.smartSelect.grow"
    },
    {
        "key": "ctrl+.",
        "command": "editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+[",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+]",
        "command": "editor.action.selectToBracket"
    },
    {
        "key": "ctrl+/",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+/",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+/",
        "command": "toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+0",
        "command": "-workbench.action.lastEditorInGroup"
    },
    {
        "key": "ctrl+0",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+a",
        "command": "-cursorLineStart",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+a",
        "command": "cursorHome",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+b",
        "command": "cursorLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+b",
        "command": "list.collapse",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+c",
        "command": "-editor.action.clipboardCopyAction"
    },
    {
        "key": "ctrl+c",
        "command": "editor.action.commentLine"
    },
    {
        "key": "ctrl+d",
        "command": "debug.removeBreakpoint",
        "when": "breakpointsFocused && !breakpointInputFocused"
    },
    {
        "key": "ctrl+d",
        "command": "debug.removeWatchExpression",
        "when": "watchExpressionsFocused && !expressionSelected"
    },
    {
        "key": "ctrl+d",
        "command": "deleteFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+d",
        "command": "deleteRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+d",
        "command": "moveFileToTrash",
        "when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+d",
        "command": "notebook.cell.delete",
        "when": "notebookEditable && notebookEditorFocused && !inputFocus"
    },
    {
        "key": "ctrl+d",
        "command": "notification.clear",
        "when": "notificationFocus"
    },
    {
        "key": "ctrl+d",
        "command": "search.action.remove",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+d",
        "command": "workbench.action.terminal.killInstance",
        "when": "terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+e",
        "command": "cursorLineEnd",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+f",
        "command": "breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "ctrl+f",
        "command": "breadcrumbs.focusNextWithPicker",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
    },
    {
        "key": "ctrl+f",
        "command": "cursorRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+f",
        "command": "list.expand",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "ctrl+g",
        "command": "breadcrumbs.selectEditor",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "ctrl+g",
        "command": "cancelSelection",
        "when": "editorHasSelection && textInputFocus"
    },
    {
        "key": "ctrl+g",
        "command": "editor.action.cancelSelectionAnchor",
        "when": "editorTextFocus && selectionAnchorSet"
    },
    {
        "key": "ctrl+g",
        "command": "editor.closeTestPeek",
        "when": "testing.isInPeek && !config.editor.stablePeek || testing.isPeekVisible && !config.editor.stablePeek"
    },
    {
        "key": "ctrl+g",
        "command": "editor.debug.action.closeExceptionWidget",
        "when": "exceptionWidgetVisible"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+h",
        "command": "deleteLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+k",
        "command": "deleteAllRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateToLastEditLocation",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+n",
        "command": "cursorDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+n",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+n",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+n",
        "command": "showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFile"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+p",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+p",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+p",
        "command": "showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+s",
        "command": "actions.find",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+space",
        "command": "-toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+space",
        "command": "extension.setMark",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.nextEditorInGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+v",
        "command": "-editor.action.clipboardPasteAction"
    },
    {
        "key": "ctrl+v",
        "command": "cursorPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.switchWindow"
    },
    {
        "key": "ctrl+w",
        "command": "editor.action.clipboardCutAction"
    },
    {
        "key": "ctrl+w",
        "command": "filesExplorer.cut",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+x",
        "command": "-editor.action.clipboardCutAction"
    },
    {
        "key": "ctrl+y",
        "command": "editor.action.clipboardPasteAction"
    },
    {
        "key": "ctrl+y",
        "command": "workbench.action.terminal.paste",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+z",
        "command": "undo"
    },
    {
        "key": "shift+f12",
        "command": "-editor.action.goToReferences",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+f8",
        "command": "-editor.action.marker.prevInFiles",
        "when": "editorFocus"
    },
    {
        "key": "alt+.",
        "command": "-editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+.",
        "command": "-problems.action.showQuickFixes",
        "when": "problemFocus"
    },
    {
        "key": "alt+/",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+/",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+0",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "alt+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "alt+1",
        "command": "workbench.view.explorer"
    },
    {
        "key": "alt+2",
        "command": "-workbench.action.openEditorAtIndex2"
    },
    {
        "key": "alt+2",
        "command": "workbench.view.extension.comment-anchors"
    },
    {
        "key": "alt+4",
        "command": "-workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "alt+4",
        "command": "workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "alt+5",
        "command": "-workbench.action.openEditorAtIndex5"
    },
    {
        "key": "alt+5",
        "command": "workbench.actions.view.problems",
        "when": "workbench.panel.markers.view.active"
    },
    {
        "key": "alt+8",
        "command": "-workbench.action.focusEighthEditorGroup"
    },
    {
        "key": "alt+8",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "alt+9",
        "command": "-workbench.action.lastEditorInGroup"
    },
    {
        "key": "alt+9",
        "command": "workbench.view.scm"
    },
    {
        "key": "alt+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "alt+b",
        "command": "cursorWordEndLeft"
    },
    {
        "key": "alt+backspace",
        "command": "-deleteAllLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+backspace",
        "command": "deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+c",
        "command": "-editor.action.clipboardCopyAction"
    },
    {
        "key": "alt+c",
        "command": "-multiclip.copy",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+d",
        "command": "deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+enter",
        "command": "-editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+f",
        "command": "-actions.find",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "alt+f",
        "command": "cursorWordStartRight"
    },
    {
        "key": "alt+f12",
        "command": "-editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "alt+f12",
        "command": "-editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "alt+f8",
        "command": "-editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "alt+g",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "alt+g",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+g",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "alt+h",
        "command": "deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+n",
        "command": "explorer.newFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus\""
    },
    {
        "key": "alt+n",
        "command": "workbench.action.terminal.new",
        "when": "terminalFocus"
    },
    {
        "key": "alt+o",
        "command": "-workbench.action.files.openFileFolder"
    },
    {
        "key": "alt+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "alt+right",
        "command": "-breadcrumbs.focusNextWithPicker",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
    },
    {
        "key": "alt+s",
        "command": "-workbench.action.files.save"
    },
    {
        "key": "alt+v",
        "command": "-multiclip.regularPaste",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+v",
        "command": "cursorPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "alt+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "alt+w",
        "command": "-workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "alt+w",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "key": "alt+w",
        "command": "editor.action.clipboardCopyAction"
    },
    {
        "key": "alt+w",
        "command": "multiclip.copy",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+x",
        "command": "-editor.action.clipboardCutAction"
    },
    {
        "key": "alt+x",
        "command": "-execCut"
    },
    {
        "key": "alt+x",
        "command": "-filesExplorer.cut",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "alt+x",
        "command": "-multiclip.cut",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+x",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "cmd+.",
        "command": "-editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+.",
        "command": "-problems.action.showQuickFixes",
        "when": "problemFocus"
    },
    {
        "key": "cmd+/",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+/",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+0",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "cmd+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "cmd+1",
        "command": "workbench.view.explorer"
    },
    {
        "key": "cmd+2",
        "command": "-workbench.action.openEditorAtIndex2"
    },
    {
        "key": "cmd+2",
        "command": "workbench.view.extension.comment-anchors"
    },
    {
        "key": "cmd+4",
        "command": "-workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "cmd+4",
        "command": "workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "cmd+5",
        "command": "-workbench.action.openEditorAtIndex5"
    },
    {
        "key": "cmd+5",
        "command": "workbench.actions.view.problems",
        "when": "workbench.panel.markers.view.active"
    },
    {
        "key": "cmd+8",
        "command": "-workbench.action.focusEighthEditorGroup"
    },
    {
        "key": "cmd+8",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "cmd+9",
        "command": "-workbench.action.lastEditorInGroup"
    },
    {
        "key": "cmd+9",
        "command": "workbench.view.scm"
    },
    {
        "key": "cmd+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "cmd+b",
        "command": "cursorWordEndLeft"
    },
    {
        "key": "cmd+backspace",
        "command": "-deleteAllLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+backspace",
        "command": "deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+c",
        "command": "-editor.action.clipboardCopyAction"
    },
    {
        "key": "cmd+c",
        "command": "-multiclip.copy",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+d",
        "command": "deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+enter",
        "command": "-editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+f",
        "command": "-actions.find",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "cmd+f",
        "command": "cursorWordStartRight"
    },
    {
        "key": "cmd+f12",
        "command": "-editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+f12",
        "command": "-editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+f8",
        "command": "-editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "cmd+g",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "cmd+g",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+g",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "cmd+h",
        "command": "deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+k",
        "command": "deleteAllLeft"
    },
    {
        "key": "cmd+n",
        "command": "explorer.newFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus\""
    },
    {
        "key": "cmd+n",
        "command": "workbench.action.terminal.new",
        "when": "terminalFocus"
    },
    {
        "key": "cmd+o",
        "command": "-workbench.action.files.openFileFolder"
    },
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "cmd+right",
        "command": "-breadcrumbs.focusNextWithPicker",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
    },
    {
        "key": "cmd+s",
        "command": "-workbench.action.files.save"
    },
    {
        "key": "cmd+v",
        "command": "-multiclip.regularPaste",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+v",
        "command": "cursorPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "cmd+w",
        "command": "-workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "cmd+w",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "key": "cmd+w",
        "command": "editor.action.clipboardCopyAction"
    },
    {
        "key": "cmd+w",
        "command": "multiclip.copy",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+x",
        "command": "-editor.action.clipboardCutAction"
    },
    {
        "key": "cmd+x",
        "command": "-execCut"
    },
    {
        "key": "cmd+x",
        "command": "-filesExplorer.cut",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "cmd+x",
        "command": "-multiclip.cut",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+x",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "ctrl+shift+,",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+;",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+.",
        "command": "editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+.",
        "command": "workbench.files.action.collapseExplorerFolders",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "ctrl+shift+/",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+/",
        "command": "problems.action.showQuickFixes",
        "when": "problemFocus"
    },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new",
        "when": "terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+0",
        "command": "workbench.action.closeEditorsInGroup"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+b",
        "command": "-workbench.action.tasks.build"
    },
    {
        "key": "ctrl+shift+c",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "ctrl+shift+f",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+f",
        "command": "problems.action.showQuickFixes",
        "when": "problemFocus"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm"
    },
    {
        "key": "ctrl+shift+l",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "ctrl+shift+l",
        "command": "notebook.format",
        "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+shift+l",
        "command": "notebook.formatCell",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+shift+m",
        "command": "-workbench.actions.view.problems",
        "when": "workbench.panel.markers.view.active"
    },
    {
        "key": "ctrl+shift+n",
        "command": "-workbench.action.newWindow"
    },
    {
        "key": "ctrl+shift+o",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+shift+o",
        "command": "editor.action.organizeImports",
        "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
    },
    {
        "key": "ctrl+shift+s",
        "command": "-workbench.action.files.saveAs"
    },
    {
        "key": "ctrl+shift+s",
        "command": "editor.action.sourceAction"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.previousEditorInGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+alt+,",
        "command": "editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+alt+.",
        "command": "editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+alt+0",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "ctrl+alt+5",
        "command": "git.checkout"
    },
    {
        "key": "ctrl+alt+6",
        "command": "git.fetchPrune"
    },
    {
        "key": "ctrl+alt+8",
        "command": "git.commitAll"
    },
    {
        "key": "ctrl+alt+9",
        "command": "-workbench.action.moveEditorToLastGroup"
    },
    {
        "key": "ctrl+alt+9",
        "command": "git.push"
    },
    {
        "key": "ctrl+alt+b",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+alt+d",
        "command": "editor.action.revealDeclaration"
    },
    {
        "key": "ctrl+alt+e",
        "command": "workbench.action.focusActiveEditorGroup"
    },
    {
        "key": "ctrl+alt+f",
        "command": "-workbench.action.toggleFullScreen"
    },
    {
        "key": "ctrl+alt+f",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "ctrl+alt+g",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+alt+i",
        "command": "editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+alt+j",
        "command": "breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible"
    },
    {
        "key": "ctrl+alt+k",
        "command": "workbench.action.openGlobalKeybindings"
    },
    {
        "key": "ctrl+alt+n",
        "command": "editor.action.marker.next"
    },
    {
        "key": "ctrl+alt+o",
        "command": "outline.focus"
    },
    {
        "key": "ctrl+alt+o",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+alt+p",
        "command": "editor.action.marker.prev",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+alt+r",
        "command": "editor.action.goToReferences",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+alt+s",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+alt+t",
        "command": "dart.goToTests"
    },
    {
        "key": "ctrl+alt+t",
        "command": "editor.action.goToTypeDefinition"
    },
    {
        "key": "ctrl+alt+u",
        "command": "dart.goToSuper"
    },
    {
        "key": "ctrl+cmd+,",
        "command": "editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+cmd+.",
        "command": "editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+cmd+0",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "ctrl+cmd+5",
        "command": "git.checkout"
    },
    {
        "key": "ctrl+cmd+6",
        "command": "git.fetchPrune"
    },
    {
        "key": "ctrl+cmd+8",
        "command": "git.commitAll"
    },
    {
        "key": "ctrl+cmd+9",
        "command": "-workbench.action.moveEditorToLastGroup"
    },
    {
        "key": "ctrl+cmd+9",
        "command": "git.push"
    },
    {
        "key": "ctrl+cmd+b",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+cmd+d",
        "command": "editor.action.revealDeclaration"
    },
    {
        "key": "ctrl+cmd+e",
        "command": "workbench.action.focusActiveEditorGroup"
    },
    {
        "key": "ctrl+cmd+f",
        "command": "-workbench.action.toggleFullScreen"
    },
    {
        "key": "ctrl+cmd+f",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "ctrl+cmd+g",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+cmd+i",
        "command": "editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+cmd+j",
        "command": "breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible"
    },
    {
        "key": "ctrl+cmd+k",
        "command": "workbench.action.openGlobalKeybindings"
    },
    {
        "key": "ctrl+cmd+n",
        "command": "editor.action.marker.next"
    },
    {
        "key": "ctrl+cmd+o",
        "command": "outline.focus"
    },
    {
        "key": "ctrl+cmd+o",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+cmd+p",
        "command": "editor.action.marker.prev",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+cmd+r",
        "command": "editor.action.goToReferences",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+cmd+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+cmd+s",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+cmd+t",
        "command": "dart.goToTests"
    },
    {
        "key": "ctrl+cmd+t",
        "command": "editor.action.goToTypeDefinition"
    },
    {
        "key": "ctrl+cmd+u",
        "command": "dart.goToSuper"
    },
    {
        "key": "shift+alt+.",
        "command": "-breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible"
    },
    {
        "key": "shift+alt+0",
        "command": "-workbench.action.toggleEditorGroupLayout"
    },
    {
        "key": "shift+alt+0",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "shift+alt+b",
        "command": "-workbench.action.tasks.build"
    },
    {
        "key": "shift+alt+b",
        "command": "cursorWordEndLeftSelect"
    },
    {
        "key": "shift+alt+c",
        "command": "-multiclip.copyMerge",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+c",
        "command": "editor.showCallHierarchy",
        "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
    },
    {
        "key": "shift+alt+c",
        "command": "editor.showIncomingCalls",
        "when": "callHierarchyVisible && callHierarchyDirection == 'outgoingCalls'"
    },
    {
        "key": "shift+alt+c",
        "command": "editor.showOutgoingCalls",
        "when": "callHierarchyVisible && callHierarchyDirection == 'incomingCalls'"
    },
    {
        "key": "shift+alt+c",
        "command": "references-view.showCallHierarchy",
        "when": "editorHasCallHierarchyProvider"
    },
    {
        "key": "shift+alt+d",
        "command": "-workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "shift+alt+d",
        "command": "editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+alt+e",
        "command": "-workbench.view.explorer"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "shift+alt+f",
        "command": "-notebook.format",
        "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "shift+alt+f",
        "command": "-notebook.formatCell",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "shift+alt+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "shift+alt+f",
        "command": "-workbench.action.terminal.searchWorkspace",
        "when": "terminalFocus && terminalProcessSupported && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "shift+alt+f",
        "command": "-workbench.view.search",
        "when": "workbench.view.search.active"
    },
    {
        "key": "shift+alt+f",
        "command": "cursorWordRightSelect"
    },
    {
        "key": "shift+alt+f12",
        "command": "-editor.action.peekImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+alt+f8",
        "command": "-editor.action.marker.prev",
        "when": "editorFocus"
    },
    {
        "key": "shift+alt+h",
        "command": "-editor.showCallHierarchy",
        "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
    },
    {
        "key": "shift+alt+h",
        "command": "-editor.showIncomingCalls",
        "when": "callHierarchyVisible && callHierarchyDirection == 'outgoingCalls'"
    },
    {
        "key": "shift+alt+h",
        "command": "-editor.showOutgoingCalls",
        "when": "callHierarchyVisible && callHierarchyDirection == 'incomingCalls'"
    },
    {
        "key": "shift+alt+h",
        "command": "-references-view.showCallHierarchy",
        "when": "editorHasCallHierarchyProvider"
    },
    {
        "key": "shift+alt+h",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+i",
        "command": "editor.action.peekImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+alt+o",
        "command": "-editor.action.organizeImports",
        "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
    },
    {
        "key": "shift+alt+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "shift+alt+p",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "shift+alt+r",
        "command": "-rerunSearchEditorSearch",
        "when": "inSearchEditor"
    },
    {
        "key": "shift+alt+r",
        "command": "editor.action.referenceSearch.trigger"
    },
    {
        "key": "shift+alt+s",
        "command": "-workbench.action.files.saveAs"
    },
    {
        "key": "shift+alt+t",
        "command": "-workbench.action.reopenClosedEditor"
    },
    {
        "key": "shift+alt+t",
        "command": "editor.action.peekTypeDefinition"
    },
    {
        "key": "shift+alt+v",
        "command": "-multiclip.paste",
        "when": "editorTextFocus && editorLangId != 'markdown'"
    },
    {
        "key": "shift+alt+x",
        "command": "-multiclip.cutMerge",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+y",
        "command": "-workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "shift+cmd+.",
        "command": "-breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible"
    },
    {
        "key": "shift+cmd+0",
        "command": "-workbench.action.toggleEditorGroupLayout"
    },
    {
        "key": "shift+cmd+0",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "shift+cmd+b",
        "command": "-workbench.action.tasks.build"
    },
    {
        "key": "shift+cmd+b",
        "command": "cursorWordEndLeftSelect"
    },
    {
        "key": "shift+cmd+c",
        "command": "-multiclip.copyMerge",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+c",
        "command": "editor.showCallHierarchy",
        "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
    },
    {
        "key": "shift+cmd+c",
        "command": "editor.showIncomingCalls",
        "when": "callHierarchyVisible && callHierarchyDirection == 'outgoingCalls'"
    },
    {
        "key": "shift+cmd+c",
        "command": "editor.showOutgoingCalls",
        "when": "callHierarchyVisible && callHierarchyDirection == 'incomingCalls'"
    },
    {
        "key": "shift+cmd+c",
        "command": "references-view.showCallHierarchy",
        "when": "editorHasCallHierarchyProvider"
    },
    {
        "key": "shift+cmd+d",
        "command": "-workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "shift+cmd+d",
        "command": "editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+cmd+e",
        "command": "-workbench.view.explorer"
    },
    {
        "key": "shift+cmd+f",
        "command": "-notebook.format",
        "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "shift+cmd+f",
        "command": "-notebook.formatCell",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.action.terminal.searchWorkspace",
        "when": "terminalFocus && terminalProcessSupported && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.view.search",
        "when": "workbench.view.search.active"
    },
    {
        "key": "shift+cmd+f",
        "command": "cursorWordRightSelect"
    },
    {
        "key": "shift+cmd+f12",
        "command": "-editor.action.peekImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+cmd+f8",
        "command": "-editor.action.marker.prev",
        "when": "editorFocus"
    },
    {
        "key": "shift+cmd+h",
        "command": "-editor.showCallHierarchy",
        "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
    },
    {
        "key": "shift+cmd+h",
        "command": "-editor.showIncomingCalls",
        "when": "callHierarchyVisible && callHierarchyDirection == 'outgoingCalls'"
    },
    {
        "key": "shift+cmd+h",
        "command": "-editor.showOutgoingCalls",
        "when": "callHierarchyVisible && callHierarchyDirection == 'incomingCalls'"
    },
    {
        "key": "shift+cmd+h",
        "command": "-references-view.showCallHierarchy",
        "when": "editorHasCallHierarchyProvider"
    },
    {
        "key": "shift+cmd+h",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+i",
        "command": "editor.action.peekImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+cmd+o",
        "command": "-editor.action.organizeImports",
        "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
    },
    {
        "key": "shift+cmd+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "shift+cmd+p",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "shift+cmd+r",
        "command": "-rerunSearchEditorSearch",
        "when": "inSearchEditor"
    },
    {
        "key": "shift+cmd+r",
        "command": "editor.action.referenceSearch.trigger"
    },
    {
        "key": "shift+cmd+s",
        "command": "-workbench.action.files.saveAs"
    },
    {
        "key": "shift+cmd+t",
        "command": "-workbench.action.reopenClosedEditor"
    },
    {
        "key": "shift+cmd+t",
        "command": "editor.action.peekTypeDefinition"
    },
    {
        "key": "shift+cmd+v",
        "command": "-multiclip.paste",
        "when": "editorTextFocus && editorLangId != 'markdown'"
    },
    {
        "key": "shift+cmd+x",
        "command": "-multiclip.cutMerge",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+y",
        "command": "-workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "alt+alt+[",
        "command": "-editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+alt+]",
        "command": "-editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+alt+s",
        "command": "-workbench.action.files.saveAll"
    },
    {
        "key": "alt+cmd+[",
        "command": "-editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+cmd+]",
        "command": "-editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+cmd+s",
        "command": "-workbench.action.files.saveAll"
    },
    {
        "key": "cmd+cmd+[",
        "command": "-editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+cmd+]",
        "command": "-editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+cmd+s",
        "command": "-workbench.action.files.saveAll"
    },
    {
        "key": "ctrl+shift+alt+f",
        "command": "editor.action.fixAll"
    },
    {
        "key": "ctrl+shift+alt+left",
        "command": "-editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+n",
        "command": "editor.action.marker.nextInFiles"
    },
    {
        "key": "ctrl+shift+alt+o",
        "command": "dartFlutterOutline.focus",
        "when": "dart-code:anyFlutterProjectLoaded"
    },
    {
        "key": "ctrl+shift+alt+p",
        "command": "editor.action.marker.prevInFiles"
    },
    {
        "key": "ctrl+shift+alt+s",
        "command": "workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+shift+cmd+f",
        "command": "editor.action.fixAll"
    },
    {
        "key": "ctrl+shift+cmd+left",
        "command": "-editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+cmd+n",
        "command": "editor.action.marker.nextInFiles"
    },
    {
        "key": "ctrl+shift+cmd+o",
        "command": "dartFlutterOutline.focus",
        "when": "dart-code:anyFlutterProjectLoaded"
    },
    {
        "key": "ctrl+shift+cmd+p",
        "command": "editor.action.marker.prevInFiles"
    },
    {
        "key": "ctrl+shift+cmd+s",
        "command": "workbench.action.showAllSymbols"
    },
    {
        "key": "shift shift",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "ctrl+k w",
        "command": "-workbench.action.closeEditorsInGroup"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "-workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+pagedown",
        "command": "-workbench.action.nextEditorInGroup"
    },
    {
        "key": "ctrl+k ctrl+pageup",
        "command": "-workbench.action.previousEditorInGroup"
    },
    {
        "key": "ctrl+k ctrl+q",
        "command": "-workbench.action.navigateToLastEditLocation"
    },
    {
        "key": "ctrl+k ctrl+s",
        "command": "-workbench.action.openGlobalKeybindings"
    },
    {
        "key": "ctrl+x 0",
        "command": "git.cleanAll"
    },
    {
        "key": "ctrl+x 2",
        "command": "workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "ctrl+x 3",
        "command": "workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+x 3",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+x 4",
        "command": "git-graph.view"
    },
    {
        "key": "ctrl+x 5",
        "command": "git.checkout"
    },
    {
        "key": "ctrl+x 6",
        "command": "git.fetchPrune"
    },
    {
        "key": "ctrl+x 7",
        "command": "git.pull"
    },
    {
        "key": "ctrl+x 8",
        "command": "git.commitAll"
    },
    {
        "key": "ctrl+x 9",
        "command": "git.push"
    },
    {
        "key": "ctrl+x b",
        "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+x f",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+x o",
        "command": "togglePeekWidgetFocus",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    },
    {
        "key": "ctrl+x o",
        "command": "workbench.action.focusNextGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+x o",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+x r",
        "command": "workbench.action.debug.selectandstart"
    },
    {
        "key": "ctrl+x s",
        "command": "workbench.action.files.saveAll"
    },
    {
        "key": "ctrl+x t",
        "command": "workbench.action.tasks.runTask"
    },
    {
        "key": "ctrl+x w",
        "command": "workbench.action.files.saveAs"
    },
    {
        "key": "ctrl+x y",
        "command": "multiclip.list"
    },
    {
        "key": "ctrl+x ctrl+f",
        "command": "workbench.action.files.openFile"
    },
    {
        "key": "ctrl+x ctrl+f",
        "command": "workbench.action.files.openFileFolder"
    },
    {
        "key": "ctrl+x ctrl+s",
        "command": "workbench.action.files.save"
    },
    {
        "key": "alt+k alt+[",
        "command": "-editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+k alt+]",
        "command": "-editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+k alt+0",
        "command": "-editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+k alt+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+k alt+w",
        "command": "-workbench.action.closeAllEditors"
    },
    {
        "key": "alt+k cmd+[",
        "command": "-editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+k cmd+]",
        "command": "-editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+k cmd+0",
        "command": "-editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+k cmd+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+k cmd+w",
        "command": "-workbench.action.closeAllEditors"
    },
    {
        "key": "cmd+k alt+[",
        "command": "-editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k alt+]",
        "command": "-editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k alt+0",
        "command": "-editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k alt+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k alt+w",
        "command": "-workbench.action.closeAllEditors"
    },
    {
        "key": "cmd+k cmd+[",
        "command": "-editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+]",
        "command": "-editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+0",
        "command": "-editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+w",
        "command": "-workbench.action.closeAllEditors"
    }
]